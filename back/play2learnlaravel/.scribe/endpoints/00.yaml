name: Authentication
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/auth/logout
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Cierra la sesión del usuario.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "status": "success",
              "message": "Usuario deslogeado exitosamente."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/register
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Registra un nuevo usuario.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'El nombre del usuario. Ejemplo: John Doe'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      username:
        name: username
        description: 'El nombre de usuario. Ejemplo: johndoe'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'El correo electrónico del usuario. Ejemplo: johndoe@example.com'
        required: true
        example: qkunze@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'La contraseña del usuario. Ejemplo: password123'
        required: true
        example: 'O[2UZ5ij-e/dl4m{o,'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: consequatur
      username: consequatur
      email: qkunze@example.com
      password: 'O[2UZ5ij-e/dl4m{o,'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
              "status": "success",
              "user": { "id": 1, "name": "John Doe" },
              "token": "your-generated-token"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "status": "error",
              "errors": {
                  "email": ["The email has already been taken."]
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/login
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Inicia sesión con el usuario.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user:
        name: user
        description: 'El correo electrónico o nombre de usuario del usuario. Ejemplo: johndoe@example.com'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'La contraseña del usuario. Ejemplo: password123'
        required: true
        example: 'O[2UZ5ij-e/dl4m{o,'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      user: consequatur
      password: 'O[2UZ5ij-e/dl4m{o,'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
              "status": "success",
              "user": { "id": 1, "name": "John Doe" },
              "token": "your-generated-token",
              "message": "Usuario logeado exitosamente."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "status": "error",
              "errors": {
                  "user": ["El correo electrónico o nombre de usuario no es válido."],
                  "password": ["La contraseña es incorrecta."]
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/auth/google/callback
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Inicia sesión con Google.

        Este endpoint permite a los usuarios iniciar sesión utilizando su cuenta de Google. Si el usuario no existe, se crea uno nuevo.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "status": "success",
              "user": {
                  "id": 1,
                  "name": "John Doe",
                  "email": "johndoe@example.com",
                  "profile_pic": "http://profilepic.com/pic.jpg",
                  "username": "johndoe"
              },
              "token": "your-generated-token"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "status": "error",
              "message": "Email no encontrado"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "status": "error",
              "message": "Error al crear el usuario"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/change-password
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Cambia la contraseña del usuario.

        Este endpoint permite al usuario cambiar su contraseña utilizando un UUID para identificar al usuario.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      uuid:
        name: uuid
        description: 'El UUID del usuario. Ejemplo: 123e4567-e89b-12d3-a456-426614174000'
        required: true
        example: 66529e01-d113-3473-8d6f-9e11e09332ea
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      new_password:
        name: new_password
        description: 'La nueva contraseña del usuario. Ejemplo: newpassword123'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      uuid: 66529e01-d113-3473-8d6f-9e11e09332ea
      new_password: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "status": "success",
              "user": {
                  "id": 1,
                  "name": "John Doe",
                  "email": "johndoe@example.com",
                  "profile_pic": "http://profilepic.com/pic.jpg",
                  "username": "johndoe"
              },
              "token": "your-generated-token"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "status": "error",
              "message": "Usuario no encontrado"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/checkAuth
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Verifica si el usuario está autenticado.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "status": "success",
              "user": { "id": 1, "name": "John Doe" }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
              "status": "error",
              "message": "Usuario no autenticado."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
